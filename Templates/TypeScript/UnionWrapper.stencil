{% macro buildUnion name fragmentSpreads concreteTypeNames spacing fieldPrefix %}
{{ spacing }}export interface {{ name }} {
{{ spacing }}  __typename: {% if concreteTypeNames.count > 0 %}{% for concreteType in concreteTypeNames %}'{{ concreteType }}'{% if not forloop.last %} | {% endif %}{% endfor %}{% else %}unknown{% endif %};
{{ spacing }}  realized: {% if concreteTypeNames.count > 0 %}{% for concreteType in concreteTypeNames %}{{ fieldPrefix }}Realized{{ concreteType }}{% if not forloop.last %} | {% endif %}{% endfor %}{% else %}unknown{% endif %};
  {% for fragment in fragmentSpreads %}
{{ spacing }}  {{ fragment.name|lowercasedFirstLetter }}: {{ fragment.name }}FragmentData;
  {% endfor %}
{{ spacing }}}
{% endmacro %}

{% if asFile %}import { ID, GraphSelection, copyWithTypeCondition } from "../GraphApi"
{{ header }}
{% if fileReferencedEnums.count > 0 %}import {
  {% for enum in fileReferencedEnums %}{{ enum }},
  {% endfor %}
} from "../Enums"{% endif %}
{% for fragment in fileReferencedFragments %}import {
  {{ fragment }}FragmentData,
  {{ fragment|lowercasedFirstLetter }}FragmentDataSelections
} from "./{{ fragment }}"
{% endfor %}
{% endif %}

{% if asFile and concreteTypeNames.count > 0 %}export namespace {{ name }} {
{{ collectedFields|internalUnionTypeDefinitions:"",groupedFragmentSpreads,concreteTypeNames }}
}
{% else %}
{{ collectedFields|internalUnionTypeDefinitions:name,groupedFragmentSpreads,concreteTypeNames }}
{% endif %}

{% if asFile %}
{% call buildUnion name fragmentSpreads concreteTypeNames "" fieldPrefix %}
{% else %}
{% call buildUnion name fragmentSpreads concreteTypeNames "  " name %}
{% endif %}

{% if asFile and fragmentSelections %}
export const {{ name|lowercasedFirstLetter }}Selections: GraphSelection[] = {{ fragmentSelections|renderTypeScriptSelections:null,0 }}
{% endif %}
