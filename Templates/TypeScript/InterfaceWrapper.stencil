{% if asFile %}import { ID, Response, GraphSelection } from "../GraphApi"
{{ header }}
{% if importEnums %}import * as Enums from "../Enums"{% endif %}
{% if fragmentNames.count > 0 %}import * as Fragments from "../Fragments"{% endif %}
{% endif %}

export interface {{ name }} {
  realized: {% for concreteType in concreteTypeNames %}{{ name }}Realized{{ concreteType }} | {% endfor %}{}{% if baseFields or fragmentSpreads %},{% endif %}
  {% for field in baseFields %}
  {% with field.attributes as attributes %}{% include "Helpers/Attributes.stencil" %}{% endwith %}
  {{ field|renderPropertyDeclaration:name }}{% if fragmentNames or not forloop.last %},{% endif %}
  {% endfor %}
  {% for fragment in fragmentSpreads %}
  {{ fragment.name|lowercasedFirstLetter }}: Fragments.{{ fragment.name }} {% if not forloop.last %},{% endif %}
  {% endfor %}
}

{% for field in fields %}
{{ field|internalTypeDefinition:name }}
{% endfor %}

{% for field in fields %}
{{ field|internalInterfaceWrapper:name }}
{% endfor %}

{% for field in fields %}
{{ field|internalUnionWrapper:name }}
{% endfor %}

{{ collectedFields|internalInterfaceTypeDefinitions:name,groupedFragmentSpreads,concreteTypeNames }}

{% if asFile %}
export const {{ name|lowercasedFirstLetter }}Selections = {{ fragmentSelections|renderTypeScriptSelections }}
{% endif %}
